.content .kana-button-control {
  display: flex;
  gap: 10px;
  flex-wrap: wrap;
  grid-template-columns: repeat(5, 1fr);
  position: sticky;
  top: 270px;
  z-index: 1;
  background: var(--button-color);
  padding: 10px 12px;
  border-radius: 50px;
  filter: var(--drop-shadow);
  margin: auto;
  margin-bottom: 20px;
}
@media screen and (min-width: 1000px) {
  .content .kana-button-control {
    top: 200px;
}
  }
@media screen and (min-width: 800px) {
  .content .kana-button-control {
    grid-area: 1 / 1 / 2 / 3;
}
  }
.content .kana-button-control button {
    background-color: var(--background-color);
    background-image: linear-gradient(to bottom right, var(--button-highlight-color) 49.5%, var(--background-color) 50%);
  }
.content .kana-button-control button.active {
      --button-text-color: var(--button-click-text-color);
      --background-color: var(--button-highlight-color);
    }


.button-wrap {
  display: flex;
}

button {
  color: var(--button-text-color);
  min-width: 60px;
  font-size: 20px;
  border-radius: 25px;
  padding: 10px 20px;
  border: none;
  margin: auto;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  filter: var(--drop-shadow);
  flex: 1 0 17%;
  white-space: nowrap;
}

button.two-char {
    padding: 10px;
  }

button {

  animation-fill-mode: forwards;
  background-image: linear-gradient(to bottom right, var(--button-highlight-color) 49.5%, var(--button-color) 50%);
  background-size: 210% 210%;
  background-color: var(--button-color);
  background-position: bottom right;
  transition: background 0.2s, transform 0.2s;
}

button:hover:not(.empty) {
    transform: translate(-1px, -1px);
    background-position: top left;
    --button-text-color: var(--button-click-text-color);
    background-color: var(--button-click-color);
  }

button:active:not(.empty) {
    transition: transform 0.03s;
    transform: scale(95%);
  }

button svg {
    transform: scale(1.15);
    margin-bottom: -1px;
  }

button svg.space {
      transform: scale(1.2);
    }
.kana-two-column {
  width: -moz-fit-content;
  width: fit-content;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  row-gap: 35px;
  -moz-column-gap: min(75px, 5vw);
       column-gap: min(75px, 5vw);
  margin-left: auto;
  margin-right: auto;
  place-items: flex-end;

}
@media screen and (max-width: 800px) {
  .kana-two-column {
    grid-template-columns: 1fr;

}
  }
.kana-two-column .kana-input-buttons {
    width: -moz-fit-content;
    width: fit-content;
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    row-gap: 15px;
    -moz-column-gap: 10px;
         column-gap: 10px;
    place-content: space-between;
    margin-bottom: auto;
  }
@media screen and (max-width: 380px) {
    .kana-two-column .kana-input-buttons {
      max-width: calc(100vw - 40px);
      margin-right: -8px;
      overflow-y: scroll;
    }
  }
.kana-button-control.kuro {
  width: -moz-fit-content;
  width: fit-content;
}
.kana-button-control.kuro button.ruby {
    padding-top: 7px;
    padding-bottom: 7px;
  }
.header {
  display: flex;
  gap: 20px;
  width: max(750px, 60vw);
  margin: 10px auto auto auto;
  background: var(--button-color);
  padding: 20px calc(((90vw - 80px) - max(600px, 60vw) )/ 2);
  border-radius: 100px;
  position: sticky;
  top: 10px;
  z-index: 1;
  filter: var(--drop-shadow);
}

.header * {
    --drop-shadow: drop-shadow(1px 1px 1px hsla(var(--main-color), var(--l-dark), 0.35));
  }

.header .control-box {
    margin: auto 0;
    display: flex;
    gap: 10px;
    justify-content: space-around;
  }

.header .control-box .button-wrap button {
      background-image: linear-gradient(to bottom right, var(--button-highlight-color) 49.5%, var(--background-color) 50%);
    }

.header .control-box .button-wrap button:active {
        transition: transform 0.03s;
        transform: scale(95%);
      }

.header .input-boxes {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    gap: 20px;
    justify-content: space-between;
  }

@media screen and (max-width: 1000px) {

.header {
    flex-direction: column;
    padding: 25px;
    width: calc(100vw - 90px);
    border-radius: 60px;
    gap: 15px;
}

    .header .input-boxes {
      gap: 15px;
    }
  }

.header .input-wrapper {
    color: white;
    background-color: var(--background-color);
    filter: var(--drop-shadow);
    border-radius: 30px;
    padding: 12px 15px;
    display: flex;
    margin: auto 0;
    height: 35px;
    overflow-x: scroll;
    overflow-y: hidden;
    -ms-overflow-style: none;  /* IE and Edge */
    scrollbar-width: none;
  }

.header .input-wrapper.ruby:not(.prepare) {
      font-size: 24px;
      place-items: center;
      padding: 12px 15px 12px 32px;
    }

.header .input-wrapper.ruby:not(.prepare):has(ruby) {
        padding: 12px 15px 12px 23px;
        font-size: 20px;
        place-items: flex-end;
      }

.header .input-wrapper.ruby:not(.prepare) > * {
        color: var(--button-text-color);
      }

.header .input-wrapper.translate.prepare h2 {
        animation: blink-animation 1s steps(2, start) infinite;
      }

.header .input-wrapper::-webkit-scrollbar {
      display: none;
    }

.header .input-wrapper input,
    .header .input-wrapper h2 {
      margin: auto 0 auto 8px;
      display: block;
      color: var(--button-text-color);
      white-space: pre;
      padding-right: 2px;
      position: relative;
    }

.header .input-wrapper input {
      width: 100%;
      background: none;
      border: none;
      outline: none;
      font-size: 24px;
      margin-top: -1px;
      margin-left: 4px;
    }

.header .input-wrapper:first-child > h2:first-child::after {
      content: " ";
      width: 2px;
      background: var(--button-text-color);
      right: -5px;
      margin: 6px 0;
      position: absolute;
      height: calc(100% - 10px);
      animation: blink-animation 1.2s steps(2, start) infinite;
      opacity: 0.8;
    }

@keyframes blink-animation {
  to {
    visibility: hidden;
  }
}
    
@keyframes shimmer {
  0% {
    background-position: 100%;
  }
  100% {
    background-position: 0%;
  }
}
.char-card {
  --card-length: min(7vw, 120px);
  --card-font-size: calc(var(--card-length) / 3);
  display: inline-grid;
  position: relative;
  width: var(--card-length);
  height: var(--card-length);
  perspective: 1000px;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
@media screen and (max-width: 800px) {
  .char-card {
    --card-length: min(14vw, 150px);
}
  }
.char-card:hover .card-front:not(.empty) {
      transform: rotateY(180deg);
      opacity: 0.5;
    }
.char-card:hover .card-back:not(.empty) {
      transform: rotateY(0);
      opacity: 1;
    }
.char-card > div {
    display: grid;
    font-size: var(--card-font-size);
    transition: transform 0.4s, opacity 0.4s;
    place-content: center;
    width: 100%;
    height: 100%;
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
    background: var(--button-color);
    color: var(--button-text-color);
    filter: var(--drop-shadow);
  }
.char-card .card-front {
    position:absolute;
  }
.char-card .card-back {
    opacity: 0.5;
    position:absolute;
    transform: rotateY(-180deg);
  }
.kana-two-column:has(.kana-cards) {
  margin-top: 30px;
}

.kana-two-column:has(.kana-cards) .kana-button-control {
    top: 30px;
  }

.kana-cards {
  width: -moz-fit-content;
  width: fit-content;
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  gap: 15px;
  place-content: space-between;
  margin-bottom: auto;
}
.color-input {
  --color-input-background: var(--button-color);
  padding: 5px 15px;
  position: fixed;
  left: 25px;
  bottom: 25px;
  background: var(--color-input-background);
  transition: background 0.3s, color 0.3s;
  display: flex;
  place-content: center;
  border-radius: 40px;
  filter: var(--drop-shadow);
}

.color-input label {
    align-self: center;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
  }

.color-input label,
  .color-input input {
    color: var(--button-text-color);
    transition: background 0.3s, color 0.3s;
  }

.color-input label::-moz-placeholder, .color-input input::-moz-placeholder {
      color: var(--button-text-color);
      opacity: 0.75;
    }

.color-input label::placeholder, .color-input input::placeholder {
      color: var(--button-text-color);
      opacity: 0.75;
    }

.color-input:has(input:invalid) {
    background: red;
  }

.color-input:has(input:invalid) label,
    .color-input:has(input:invalid) input {
      color: white;
    }

.color-input.custom label,
    .color-input.custom input {
      color: black;
    }

.color-input.custom label::-moz-placeholder, .color-input.custom input::-moz-placeholder {
        color: black;
        opacity: 0.7;
      }

.color-input.custom label::placeholder, .color-input.custom input::placeholder {
        color: black;
        opacity: 0.7;
      }

.color-input.custom.light label,
      .color-input.custom.light input {
        color: white;
      }

.color-input.custom.light label::-moz-placeholder, .color-input.custom.light input::-moz-placeholder {
          color: white;
          opacity: 0.7;
        }

.color-input.custom.light label::placeholder, .color-input.custom.light input::placeholder {
          color: white;
          opacity: 0.7;
        }

.color-input input {
    height: 25px;
    outline: none;
    border: none;
    padding: 5px;
    font-size: 20px;
    background: none;
    transition: font 0.3s;
    width: 6ch;
  }

.mode-toggle button {
    background-color: var(--background-color);
    background-image: linear-gradient(to bottom right, var(--button-highlight-color) 49.5%, var(--background-color) 50%);

    --button-text-color: var(--button-click-text-color);
    --background-color: var(--button-highlight-color);
    height: 60px;
    border-radius: 40px;
  }

.mode-toggle button:active {
      background: var(--button-click-color);
    }

.mode-toggle {

  position: fixed;
  right: 25px;
  bottom: 25px;
}

body .sun {
    display: none;
  }

body .moon {
    display: block;
  }

body.night-mode .moon {
      display: none;
    }

body.night-mode .sun {
      display: block;
    }
ul {
  display: flex;
  gap: 10px;
  padding: 0;
  justify-content: space-between;
  max-width: 500px;
  margin: 0 auto;
  overflow-x: auto;
}
@media screen and (max-width: 300px) {
  ul {
    max-width: calc(100vw - 40px);
    flex-direction: column;
}
  }
ul li {
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    list-style: none;
    padding: 10px 12px 20px;
    cursor: pointer;
  }
ul li span {
      color: var(--button-text-color);
    }
body {
  overscroll-behavior-x: none;
  overscroll-behavior-y: none;
  margin: 20px;

  /* color components */
  --main-color: 71, 61%;
  --l: 71%;
  --l-t: 90%;
  --l-dark: calc(var(--l) - 50%);
  --hsl-main: var(--main-color), var(--l);
  --hsl-dark: var(--main-color), var(--l-t);
  
  /* premade colors */
  --button-color: hsl(var(--hsl-main));
  --button-highlight-color: hsl(var(--hsl-dark));
  --button-text-color: hsl(var(--hsl-dark));
  --button-click-color: #e3e3e3;
  --button-click-text-color: hsl(var(--hsl-main));

  --text-color-half-opacity: hsl(var(--hsl-dark), 0.5);

  --background-color: hsl(var(--main-color), calc(var(--l) - 10%));
  --drop-shadow: drop-shadow(1px 1px 2px hsla(var(--main-color), var(--l-dark), 0.2));
  
  -webkit-tap-highlight-color: transparent;
}

body.night-mode {
    --main-color: 0, 0%;
    --l: 21%;
    --hsl-main: var(--main-color), var(--l);
    --hsl-dark: var(--main-color), var(--l-t);
  }

body.light {
    --l-t: 10%;
  }

html * {
  font-family: 'Zen Kaku Gothic New', sans-serif;
  font-weight: 500;
}

body {
  background: var(--background-color);
}

body .content > * {
      margin-bottom: 30px;
    }

body .content .empty {
      opacity: 0.5;
      filter: none;
      pointer-events: none;
    }

